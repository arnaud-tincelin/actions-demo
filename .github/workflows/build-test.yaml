name: Build & Tests

on: [push, pull_request]

env:
  GO_VERSION: '1.17'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.GO_VERSION }}
    - name: Download modules
      run: go mod download
    - name: Build project
      run: go build ./cmd/demo
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.GO_VERSION }}
    - name: Linter
      uses: golangci/golangci-lint-action@v2
      with:
        version: latest
  sonar:
    runs-on: ubuntu-latest
    name: SonarQube
    steps:
    - uses: actions/checkout@v2
    - uses: philips-software/sonar-scanner-action@v1.3.0
      with:
        token: ${{ secrets.SONARQUBE_TOKEN }}
        projectName: Demo
        projectKey: demo.github.actions
        url: http://demosonar.westeurope.cloudapp.azure.com:9000/
        isCommunityEdition: true
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.GO_VERSION }}
    - name: Go tests
      run: go test -v -race -coverprofile=coverage.out -covermode=atomic ./...
    - name: Upload coverage to Codecov
      run: bash <(curl -s https://codecov.io/bash) -C $(Build.SourceVersion)
  deploy:
    needs: [build, dev-policy-assessment]
    environment: production
    steps:
      - name: Deploy to Azure
        run: |
          echo "Deployment to Azure Started"
          sleep 10s
          echo "Deployment Successfull"
